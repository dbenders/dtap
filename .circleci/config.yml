version: 2
jobs:
  build:
    environment:
      GOPATH: /home/circleci/go
      CGO_ENABLED: 0
      GO_LDFLAGS: "-s -w -extldflags \"-static\" -X main.BuildVersion $BUILD_VERSION -X main.BuildDate $BUILD_DATE"
    docker:
     - image: circleci/golang:1.15
    steps:
      - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      - run: go get -v -t -d ./...
      - run: go get github.com/mitchellh/gox
      - run: go get github.com/tcnksm/ghr
      - run: gox -osarch="linux/amd64 linux/arm64 freebsd/amd64 freebsd/arm64 darwin/amd64 openbsd/amd64" -output "${GOPATH}/pkg/{{.Dir}}_{{.OS}}_{{.Arch}}"  ./ ./...
      - run: ghr -u $CIRCLE_PROJECT_USERNAME $CIRCLE_TAG $GOPATH/pkg/
  test:
    environment:
      - GOPATH: /home/circleci/go
    docker:
     - image: circleci/golang:1.12
    steps:
      - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      - run: go get -v -t -d ./...
      - run: go test

workflows:
  version: 2
  test:
    jobs:
      - test
  deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
